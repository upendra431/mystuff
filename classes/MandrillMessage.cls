//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public with sharing class MandrillMessage{

    public MandrillMessage(){
        to = new List<To>();
        attachmentSet = new Set<Id>();
        documentSet = new Set<Id>();
        bcc_address = null;
        if(club62__C62MandrillMessage__c.getInstance('Default')!=null 
            && club62__C62MandrillMessage__c.getInstance('Default').club62__Key__c!=null 
            && club62__C62MandrillMessage__c.getInstance('Default').club62__Key__c!=''){
            key = club62__C62MandrillMessage__c.getInstance('Default').club62__Key__c;
        }
    }

    public class Values {
        public Integer user_id;
    }

    public String ReplyTo;
    public String html;
    public String text;
    public String subject;
    public String from_email;
    public String from_name;
    public List<To> to;
    public Boolean important;
    public String bcc_address;
    public List<Merge_vars> merge_vars;
    public List<String> tags;
    public Metadata metadata;
    public List<Recipient_metadata> recipient_metadata;

    public Set<Id> attachmentSet;
    public Set<Id> documentSet;
    public String key;
    public Boolean async;
    public String ip_pool;

    public void addTo(String email, String name, String toType){
        To newTO = new To();
        newTO.email = email;
        newTO.name = name;
        newTO.toType = toType;
        to.add(newTO);
    }

    public class To {
        public String email;
        public String name;
        public String toType;
    }

    public class Recipient_metadata {
        public String rcpt;
        public Values values;
    }

    public class Vars {
        public String name;
        public String content;
    }

    public class Metadata {
        public String website;
    }

    public class Merge_vars {
        public String rcpt;
        public List<Vars> vars;
    }


    public static MandrillMessage parse(String json) {
        return (MandrillMessage) System.JSON.deserialize(json, MandrillMessage.class);
    }

    public String buildMessage(){
        Map<Id, Attachment> attachMap = new Map<Id,Attachment>([SELECT ID, NAME, BODY, CONTENTTYPE FROM ATTACHMENT WHERE ID IN: attachmentSet]);
        Map<Id, Document> docMap = new Map<Id,Document>([SELECT ID, NAME, BODY, CONTENTTYPE FROM DOCUMENT WHERE ID IN: documentSet]);
        Boolean multipleRecipients = false;
        String returnMessage = '{'+
        '    \"key\": \"' + key + '\",'+
        '    \"message\": {'+
        '        \"html\": \"' + html + '\",'+
        '        \"text\": \"' + text + '\",'+
        '        \"subject\": \"' + subject + '\",'+
        '        \"from_email\": \"' + from_email + '\",'+
        '        \"from_name\": \"' + from_name + '\",'+
        '        \"to\": [';
        for (To t : to){
            if (multipleRecipients) returnMessage = returnMessage + ',';
            returnMessage += '           {'+
            '                \"email\": \"' + t.email + '\",'+
            '                \"name\": \"' + t.name + '\",'+
            '                \"type\": \"' + t.toType + '\"'+
            '            }';
            multipleRecipients = true;
        }   
        returnMessage +=    '        ],'+
        '        \"headers\": {'+
        '            \"Reply-To\": \"' + ReplyTo + '\"'+
        '        },'+
        '        \"important\": false,'+
        '        \"track_opens\": null,'+
        '        \"track_clicks\": null,'+
        '        \"auto_text\": null,'+
        '        \"auto_html\": null,'+
        '        \"inline_css\": null,'+
        '        \"url_strip_qs\": null,'+
        '        \"preserve_recipients\": null,'+
        '        \"view_content_link\": null,';
        if (bcc_address != null) returnMessage += '        \"bcc_address\": \"' + bcc_address + '\",';
        returnMessage += '        \"tracking_domain\": null,'+
        '        \"signing_domain\": null';
        //'        \"return_path_domain\": null,'+
        //'        \"merge_vars\": ['+
        //'            {'+
        //'                \"rcpt\": \"recipient.email@example.com\",'+
        //'                \"vars\": ['+
        //'                    {'+
        //'                        \"name\": \"merge2\",'+
        //'                        \"content\": \"merge2 content\"'+
        //'                    }'+
        //'                ]'+
        //'            }'+
        //'        ],'+
        //'        \"tags\": ['+
        //'            \"password-resets\"'+
        //'        ],'+
        //'        \"metadata\": {'+
        //'            \"website\": \"www.example.com\"'+
        //'        },'+
        //'        \"recipient_metadata\": ['+
        //'            {'+
        //'                \"rcpt\": \"recipient.email@example.com\",'+
        //'                \"values\": {'+
        //'                    \"user_id\": 123456'+
        //'                }'+
        //'            }'+
        //'        ]'+

        if (attachmentSet.size() > 0){
            Boolean multipleAttach = false;
            returnMessage += ',"attachments": [ ';
                for (String x : attachmentSet){
                    Attachment thisAttachment = attachMap.get(x);
                    if (multipleAttach) returnMessage += ',';
                    returnMessage += '    {' +
                    '        \"type\": \"' + thisAttachment.ContentType + '\",' +
                    '        \"name\": \"' + thisAttachment.Name + '\",' +
                    //'        \"content\": \"' + thisAttachment.Body + '\"' +
                    //'        \"content\": \"' + EncodingUtil.base64Encode(Blob.valueOf(thisAttachment.Body.toString())) + '\"' +
                    '        \"content\": \"' + EncodingUtil.base64Encode(thisAttachment.Body) + '\"' +
                    '    }';
                    multipleAttach = true;
            }
            returnMessage += ']';
        }

        if (documentSet.size() > 0){
            if(attachmentSet.size() > 0){
                returnMessage = returnMessage.subString(0,returnMessage.length()-1);
                    for (String x : documentSet){
                        Document thisAttachment = docMap.get(x);
                        returnMessage += ',    {' +
                        '        \"type\": \"' + thisAttachment.ContentType + '\",' +
                        '        \"name\": \"' + thisAttachment.Name + '\",' +
                        '        \"content\": \"' + thisAttachment.Body + '\"' +
                        '    }';
                }
                returnMessage += ']';
            } else {
                Boolean multipleAttach = false;
                returnMessage += ',"attachments": [ ';
                    for (String x : documentSet){
                        Document thisAttachment = docMap.get(x);
                        if (multipleAttach) returnMessage += ',';
                        returnMessage += '    {' +
                        '        \"type\": \"' + thisAttachment.ContentType + '\",' +
                        '        \"name\": \"' + thisAttachment.Name + '\",' +
                        '        \"content\": \"' + thisAttachment.Body + '\"' +
                        '    }';
                        multipleAttach = true;
                }
                returnMessage += ']';
            }
        }

        returnMessage +='    },'+
        '    \"async\": false,'+
        '    \"ip_pool\": \"Main Pool\"'+
        '}';
        return returnMessage;
    }
}